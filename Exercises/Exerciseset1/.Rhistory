getwd
getwd()
setwd("~/Documents/Arina MBA/INSEAD-16D/P3/Big Data Analytics/INSEADAnalytics/Exercises/Exerciseset1")
getwd()
source("helpersSet1.R")
file.create("log.txt")
sink("log.txt")
source("dataSet1.R")
sink()
unlink("log.txt")
rm(list=ls())
setwd("~/Documents/Arina MBA/INSEAD-16D/P3/Big Data Analytics/INSEADAnalytics/Exercises/Exerciseset1")
getwd
getwd()
source("helpersSet1.R")
website_used = "yahoo" # can be "yahoo" or other ( see help(getSymbols) ). Depending on the website we may need to change the stock tickers' representation
mytickers = c("SPY", "AAPL")  # Other tickers for example are "GOOG", "GS", "TSLA", "FB", "MSFT",
startDate = "2001-01-01"
tmp<-as.matrix(try(getSymbols(Symbols="SPY",from = startDate,src = website_used, auto.assign=FALSE)))
tmp
tmp[nrow<10]
tmp[1:5]
tmp[1]
tmp[1,]
tmp[,1:2]
tmp[1,]
StockPrices=matrix(rep(0,nrow(tmp)*length(mytickers)), ncol=length(mytickers))
StockPrices[1,]
StockPrices
colnames(StockPrices)<-mytickers;
StockPrices[1,]
rownames(StockPrices)<-rownames(tmp)
StockPrices[,1]
rownames(tmp)
StockVolume=StockPrices
StockPrices[,1] <- tmp[,6]
StockPrices[,1]
mytickers
rownames(tmp)
rownames(StockPrices)
intersect(rownames(tmpdata),rownames(StockPrices))
intersect(rownames(tmp),rownames(StockPrices))
StockPrices[,1]
StockPrices[1,1]
StockPrices[2,1]
StockPrices[3,1]
StockPrices[5,1]
StockPrices[,1]
dimnames(tmp)
dimnames(StockPrices)
dimnames(tmp)
for (ticker_index in 1:length(mytickers)){
ticker_to_get = mytickers[ticker_index]
print(paste("\nDownloading ticker ", ticker_to_get, " ..."))
tmpdata<-as.matrix(try(getSymbols(Symbols=ticker_to_get,from = startDate,auto.assign=FALSE)))
if (!inherits(tmpdata, "try-error"))
{
therownames=intersect(rownames(tmpdata),rownames(StockPrices))
tmpdata[is.na(tmpdata)] <- 0
StockPrices[therownames,ticker_index]<-tmpdata[therownames,6] # adjusted close price
StockVolume[therownames,ticker_index]<-tmpdata[therownames,5] # shares volume for now - need to convert to dollars later
} else {
cat(ticker_to_get," NOT found")
}
}
head(StockPrices,-1)
head(StockPrices,1)
tail(StockPrices,1)
x<-matrix(1:6,nrow=3,ncol=2)
x
head(x,-1)
tail(x,-1)
(tail(x,-1)-head(x,-1))/head(x,-1),0)
(tail(x,-1)-head(x,-1))/head(x,-1)
rm(x)
StockReturns= ifelse(head(StockPrices,-1)!=0, (tail(StockPrices,-1)-head(StockPrices,-1))/head(StockPrices,-1),0) # note that this removes the first day as we have no way to get the returns then!
rownames(StockReturns)<-tail(rownames(StockPrices),-1) # adjust the dates by 1 day now
rownames(StockReturns)
x<-matrix(1:6,nrow=3,ncol=2)
tail(rownames(x),-1)
rownames(x)<-c("a","b","c")
tail(rownames(x),-1)
mytickers
# Now remove the first day from the other data, too
StockPrices = StockPrices[rownames(StockReturns),]
StockVolume = StockPrices[rownames(StockReturns),]
colnames(StockPrices)<-mytickers
colnames(StockVolume)<-mytickers
colnames(StockReturns)<-mytickers
save(StockReturns,StockPrices,StockVolume, file = "DataSet1.Rdata")
colnames(StockReturns)
StockReturns[,"AAPL"]
StockReturns[1,"SPY"]
StockReturns[0,"SPY"]
StockReturns["2016-06-02","SPY"]
StockReturns["2016-06-02","AAPL"]
round(100*sum(StockReturns[,"AAPL"]),1)
round(100*mean(StockReturns[,"AAPL"]),3)
round(100*sd(StockReturns[,"AAPL"]),3)
AAPL = StockReturns[,"AAPL"]
pnl_plot(AAPL)
source("dataSet1_Y.R")
round(100*sum(StockReturns[,"YHOO"]),1)
round(100*sd(StockReturns[,"YHOO"]),3)
round(100*mean(StockReturns[,"YHOO"]),3)
class(StockReturns)
dim(StockReturns)
nrow(StockReturns)
ncol(StockReturns)
StockReturns[1:4,]
head(StockReturns,5)
tail(StockReturns,5)
transposedData = t(StockReturns)
transposedData
transposedData[1:5,]
transposedData[1:5,1]
transposedData[1:2,1]
StockReturns[1,1:2]
nrow(transposedData)
transposedData[1:3,1]
transposedData[1:3,1:3]
transposedData[1:3,]
transposedData[1:3,1:5]
ncols(transposedData)
ncol(transposedData)
nrow(transposedData)
portfolio=apply(StockReturns,c(1,"SPY":"AAPL"),mean)
portfolio=apply(StockReturns,c(1,1:2),mean)
portfolio=apply(StockReturns,StockReturns[,"SPY":"AAPL"],mean)
portfolio=apply(StockReturns,StockReturns[,1:2],mean)
portfolio=apply(StockReturns,1,mean)
names(portfolio) <- rownames(StockReturns)
pnl_plot(portfolio)
StockReturns[1:5,1:2]
StockReturns <- StockReturns[,1:2]
portfolio = apply(StockReturns,1,mean)
names(portfolio) <- rownames(StockReturns)
pnl_plot(portfolio)
StockReturns[1:5,1:2]
rm(list=ls())
StockReturns[1:5,1:2]
source("helpersSet1.R")
website_used = "yahoo" # can be "yahoo" or other ( see help(getSymbols) ). Depending on the website we may need to change the stock tickers' representation
mytickers = c("SPY", "AAPL")  # Other tickers for example are "GOOG", "GS", "TSLA", "FB", "MSFT",
startDate = "2001-01-01"
tmp<-as.matrix(try(getSymbols(Symbols="SPY",from = startDate,src = website_used, auto.assign=FALSE)))
dimnames(tmp)
StockPrices=matrix(rep(0,nrow(tmp)*length(mytickers)), ncol=length(mytickers))
colnames(StockPrices)<-mytickers;
rownames(StockPrices)<-rownames(tmp)
StockVolume=StockPrices
StockPrices[,1] <- tmp[,6]
dimnames(StockPrices)
for (ticker_index in 1:length(mytickers)){
ticker_to_get = mytickers[ticker_index]
print(paste("\nDownloading ticker ", ticker_to_get, " ..."))
tmpdata<-as.matrix(try(getSymbols(Symbols=ticker_to_get,from = startDate,auto.assign=FALSE)))
if (!inherits(tmpdata, "try-error"))
{
therownames=intersect(rownames(tmpdata),rownames(StockPrices))
tmpdata[is.na(tmpdata)] <- 0
StockPrices[therownames,ticker_index]<-tmpdata[therownames,6] # adjusted close price
StockVolume[therownames,ticker_index]<-tmpdata[therownames,5] # shares volume for now - need to convert to dollars later
} else {
cat(ticker_to_get," NOT found")
}
}
head(StockPrices,1)
tail(StockPrices,1)
rm(list=ls()) # Clean up the memory, if we want to rerun from scratch
source("helpersSet1.R")
website_used = "yahoo" # can be "yahoo" or other ( see help(getSymbols) ). Depending on the website we may need to change the stock tickers' representation
mytickers = c("SPY", "AAPL", "YHOO")  # Other tickers for example are "GOOG", "GS", "TSLA", "FB", "MSFT",
startDate = "2000-12-31"
tmp<-as.matrix(try(getSymbols(Symbols="SPY",from = startDate,src = website_used, auto.assign=FALSE)))
dimnames(tmp)
rownames(tmp)
x<-rownames(tmp);x[1]
tmp<-as.matrix(try(getSymbols(Symbols="YHOO",from = startDate,src = website_used, auto.assign=FALSE)))
x<-rownames(tmp);x[1]
tmp<-as.matrix(try(getSymbols(Symbols="YHOO",from = startDate-1,src = website_used, auto.assign=FALSE)))
tmp<-as.matrix(try(getSymbols(Symbols="YHOO",from = "2001-01-01",src = website_used, auto.assign=FALSE)));x<-rownames(tmp);x[1]
tmp<-as.matrix(try(getSymbols(Symbols="YHOO",from = "2000-01-01",src = website_used, auto.assign=FALSE)));x<-rownames(tmp);x[1]
tmp<-as.matrix(try(getSymbols(Symbols="YHOO",from = "2000-12-01",src = website_used, auto.assign=FALSE)));x<-rownames(tmp);x[1]
tmp<-as.matrix(try(getSymbols(Symbols="YHOO",from = "2000-12-31",src = website_used, auto.assign=FALSE)));x<-rownames(tmp);x[1]
tmp<-as.matrix(try(getSymbols(Symbols="YHOO",from = "2001-12-01",src = website_used, auto.assign=FALSE)));x<-rownames(tmp);x[1]
tmp<-as.matrix(try(getSymbols(Symbols="YHOO",from = "2001-01-01",src = website_used, auto.assign=FALSE)));x<-rownames(tmp);x[1]
